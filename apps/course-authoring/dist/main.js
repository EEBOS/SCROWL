var e=require("path"),n=require("electron"),o=require("electron-reload"),r=require("electron-devtools-installer"),s=require("electron-debug"),t=require("url");function l(e){return e&&e.__esModule?e.default:e}let a;if("development"===process.env.NODE_ENV){const e=process.env.PORT||1234;a=n=>{const o=new t.URL(`http://localhost:${e}`);return o.pathname=n,o.href}}else a=n=>`file://${l(e).resolve(__dirname,"./",n)}`;let i=null;n.ipcMain.on("ipc-example",(async(e,n)=>{const o=e=>`IPC test: ${e}`;console.log(o(n)),e.reply("ipc-example",o("pong"))}));const c="development"===process.env.NODE_ENV||"true"===process.env.DEBUG_PROD;if(c){s();try{l(o)(__dirname,{})}catch(e){console.error(e)}}const p=async()=>{c&&await Promise.all([l(r)(r.REACT_DEVELOPER_TOOLS)]).then((e=>{console.log(`Added Extensions: ${e}`)}));const o=n.app.isPackaged?l(e).join(process.resourcesPath,"assets"):l(e).join(__dirname,"../../assets");i=new n.BrowserWindow({show:!1,width:1024,height:728,icon:((...n)=>l(e).join(o,...n))("icon.png"),webPreferences:{preload:l(e).join(__dirname,"preload.js")}}),i.loadURL(a("renderer.html")),i.on("ready-to-show",(()=>{if(!i)throw new Error('"mainWindow" is not defined');process.env.START_MINIMIZED?i.minimize():i.show()})),i.on("closed",(()=>{i=null})),i.webContents.setWindowOpenHandler((e=>(n.shell.openExternal(e.url),{action:"deny"})))};n.app.on("window-all-closed",(()=>{"darwin"!==process.platform&&n.app.quit()})),n.app.whenReady().then((()=>{p(),n.app.on("activate",(()=>{null===i&&p()}))})).catch(console.log);
//# sourceMappingURL=main.js.map
