var e=require("path"),r=require("electron"),t=require("electron-debug"),n=require("electron-devtools-installer"),o=require("url"),s=require("fs-extra"),a=require("scorm-packager"),i=require("adm-zip"),c=require("os"),l=require("handlebars"),d=require("knex");function f(e){return e&&e.__esModule?e.default:e}function u(e,r,t,n){Object.defineProperty(e,r,{get:t,set:n,enumerable:!0,configurable:!0})}var p=e.resolve(__dirname,"../src/main");let m;if("development"===process.env.NODE_ENV){const e=process.env.PORT||1234;m=r=>{const t=new o.URL(`http://localhost:${e}`);return t.pathname=r,t.href}}else m=r=>`file://${f(e).join(p,"../../","dist",r)}`;const g=(e,r)=>{try{const t=new(f(i));return t.addLocalFolder(e),t.writeZip(r),{error:!1,filePath:r}}catch(e){return{error:!0,message:e}}};const h={image:{name:"Image",extensions:["jpg","jpeg","png"]},video:{name:"Video",extensions:["mp4","mkv","avi"]},project:{name:"Scrowl Project",extensions:["scrowl"]}},w=e=>new Promise(((t,n)=>{r.dialog.showOpenDialog(e).then((({canceled:e,filePaths:r})=>{t({error:!1,canceled:e,filePaths:r})})).catch((e=>{n({filePaths:[],canceled:!1,error:!0,message:e})}))})),v=e=>new Promise(((t,n)=>{r.dialog.showSaveDialog(e).then((({canceled:e,filePath:r})=>{t({error:!1,canceled:e,filePath:r})})).catch((e=>{n({filePath:"",canceled:!1,error:!0,message:e})}))}));const y=r=>f(e).normalize(r),P=e=>/.json$/.test(e)||/.project$/.test(e),j=r=>{let t;try{return t=f(s).mkdtempSync(f(e).join(f(c).tmpdir(),""+(r?`${r}_`:""))),{error:!1,pathName:t}}catch(e){return{error:!0,message:e}}},S=e=>{try{return{error:!1,exists:f(s).pathExistsSync(e)}}catch(e){return{error:!0,exists:!1,message:e}}},E=(e,r="utf8")=>{const t=S(e);if(t.error)return{error:!0,message:t.message};void 0===r&&(r="utf8");const n=y(e);try{let e;const t=f(s).readFileSync(n,{encoding:r,flag:"r"});return e=P(n)?JSON.parse(t):t,{error:!1,contents:e}}catch(e){return{error:!0,message:e}}},_=(e,r)=>{const t=y(e);if(!r)return{error:!0,filename:t,message:"no contents to write"};try{return P(e)&&(r="string"!=typeof r?JSON.stringify(r,null,2):JSON.stringify(JSON.parse(r),null,2)),f(s).outputFileSync(t,r),{error:!1,filename:t}}catch(e){return{error:!0,filename:t,message:e}}},N=(e,r)=>{const t=y(e),n=y(r);try{return f(s).copySync(t,n),{error:!1,filename:n}}catch(e){return{error:!0,message:e}}},O=(r,t)=>{const n=`${t}/${f(e).basename(r)}`;return N(r,n)};f(l).registerHelper("raw",(e=>e.fn()));const q=(e,r)=>{try{return{error:!1,data:f(l).compile(e)(r)}}catch(e){return{error:!0,message:e}}};var x=e.resolve(__dirname,"../src/main/services/exporter");const b={files:{template:{source:f(e).join(x,"course/templates/index.hbs"),dest:f(e).join(x,"course/package/content/index.html")}},dirs:{source:f(e).join(x,"course/package"),out:f(e).join(x,"course/dist")}},k=(e,r)=>new Promise(((e,t)=>{const n={version:"1.2",organization:"OSG",language:"en-US",startingPage:"content/index.html",source:b.dirs.source,package:{version:"0.0.1",zip:!0,outputFolder:b.dirs.out}},o=E(b.files.template.source);if(o.error)return void t(o);if(!r.manifest)return void t({error:!0,message:"Missing project manifest"});const i={title:r.title?r.title:"",manifest:JSON.stringify(r.manifest)},c=q(o.contents,i);if(c.error)return void t(c);const l=_(b.files.template.dest,c.data);l.error?t(l):((()=>{let e="";for(e in b.dirs)f(s).existsSync(b.dirs[e])||f(s).mkdirSync(b.dirs[e])})(),f(a)(n,(r=>{e({error:!1,message:r})})))})),D={package:"package-course"},M=()=>{r.ipcMain.handle(D.package,k)};var T=e.resolve(__dirname,"../src/main/services/internal-storage");var R=f(d)({client:"sqlite3",connection:{filename:f(e).join(T,"./scrowl.sqlite")},useNullAsDefault:!0});var $=async()=>(await R.select().from("preferences"))[0],V=async e=>(await R.select(e).from("preferences"))[0],F=e=>R("preferences").update(e);const L={getPreferencesList:"get-preferences-list",getPreference:"get-preference",setPreferences:"set-preferences"},I=()=>$(),U=(e,r)=>V(r),z=(e,r)=>F(r),J=()=>{r.ipcMain.handle(L.getPreferencesList,I),r.ipcMain.handle(L.getPreference,((e,r)=>U(0,r))),r.ipcMain.handle(L.setPreferences,((e,r)=>z(0,r)))};const W=J;var A,B={};A=B,Object.defineProperty(A,"__esModule",{value:!0,configurable:!0}),u(B,"create",(()=>C)),u(B,"save",(()=>G)),u(B,"importFile",(()=>H)),u(B,"EVENTS",(()=>Z)),u(B,"default",(()=>K));const C=function(e,r){const t=j("scrowl");if(t.error)return t;const n=`${t.pathName}/scrowl.project`;return _(n,r)},G=async function(e,r,t){const n={title:"Scrowl - Save Project",filters:[{name:"Scrowl Project",extensions:["scrowl"]}]};if(!t){const e=await v(n);if(e.error)return e;e.filePath&&(t=e.filePath)}return s=t,(o=r)?s?g(o,s):{error:!0,message:"project requires a filename"}:{error:!0,message:"project requires a source"};var o,s},H=async function(e,r,t){const n=(e=>e.map((e=>h[e])))(r);if(!n.length)return{error:!0,message:"valid file types need to be declared for importing"};const o={title:"Scrowl - Import File",filters:n},s=await w(o);return s.error?s:s.filePaths.length?O(s.filePaths[0],t):{error:!0,message:"no files found/selected"}},Z=[{name:"project-create",fn:C},{name:"project-save",fn:G},{name:"project-import",fn:H}];var K={EVENTS:Z,create:C,save:G};const Q=[B],X=()=>{Q.forEach((e=>{e.EVENTS&&(e=>{e.EVENTS.forEach((e=>{e.fn&&"function"==typeof e.fn&&r.ipcMain.handle(e.name,e.fn)}))})(e)}))};var Y=e.resolve(__dirname,"../src/main");const ee=f(e).join(Y,"../../");let re=null;const te="development"===process.env.NODE_ENV||"true"===process.env.DEBUG_PROD,ne=async()=>{if(te){f(t)();const e=await Promise.all([f(n)(n.REACT_DEVELOPER_TOOLS)]);console.log(`\n\nAdded Extensions: ${e}\n\n`)}const o=r.app.isPackaged?f(e).join(process.resourcesPath,"assets"):f(e).join(ee,"dist","assets"),s=(...r)=>f(e).join(o,...r);if(re=function(e){const t={titleBarStyle:"hidden",show:!1,width:1024,minWidth:1024,height:728,icon:s("icon.png"),webPreferences:{preload:e}};try{return new r.BrowserWindow(t)}catch(r){return console.error(e,"\n",r),null}}(f(e).join(ee,"dist","preload.js")),!re)throw"Unable to create Browser Window";M(),W(),X(),re.loadURL(m("renderer.html")),re.on("ready-to-show",(()=>{if(!re)throw new Error('"mainWindow" is not defined');process.env.START_MINIMIZED?re.minimize():(re.show(),re.webContents.openDevTools({mode:"detach"}))})),re.on("closed",(()=>{re=null})),re.webContents.setWindowOpenHandler((e=>(r.shell.openExternal(e.url),{action:"deny"})))};r.app.on("window-all-closed",(()=>{"darwin"!==process.platform&&r.app.quit()})),r.app.whenReady().then((()=>{(()=>{const e="scrowl-file";r.protocol.registerFileProtocol(e,((e,r)=>{const t=e.url.replace("scrowl-file://","");try{return r(decodeURIComponent(t))}catch(e){console.error(e)}}))})(),ne(),r.app.on("activate",(()=>{null===re&&ne()}))})).catch(console.log);
//# sourceMappingURL=main.js.map
