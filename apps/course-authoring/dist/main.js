var e=require("path"),r=require("electron"),n=require("electron-debug"),t=require("electron-devtools-installer"),o=require("url"),i=require("fs-extra"),a=require("scorm-packager"),s=require("adm-zip"),l=require("os"),c=require("knex");function d(e){return e&&e.__esModule?e.default:e}function p(e,r){return Object.keys(r).forEach((function(n){"default"===n||"__esModule"===n||e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return r[n]}})})),e}function m(e){Object.defineProperty(e,"__esModule",{value:!0,configurable:!0})}function u(e,r,n,t){Object.defineProperty(e,r,{get:n,set:t,enumerable:!0,configurable:!0})}var f=e.resolve(__dirname,"../src/main");let g;if("development"===process.env.NODE_ENV){const e=process.env.PORT||1234;g=r=>{const n=new o.URL(`http://localhost:${e}`);return n.pathname=r,n.href}}else g=r=>`file://${d(e).join(f,"../../","dist",r)}`;var v={},y={};m(y),u(y,"create",(()=>Ue)),u(y,"save",(()=>$e)),u(y,"importFile",(()=>Ne)),u(y,"EVENTS",(()=>qe)),u(y,"init",(()=>Me)),u(y,"Project",(()=>xe)),u(y,"default",(()=>De));var w={},b={};m(b),u(b,"pack",(()=>x)),u(b,"EVENTS",(()=>D)),u(b,"init",(()=>T)),u(b,"default",(()=>I));var h={},S={};m(S),u(S,"register",(()=>k)),u(S,"registerAll",(()=>O)),u(S,"init",(()=>E)),u(S,"default",(()=>P));const j=[],k=e=>{if(e.name)switch(e.type){case"invoke":if(!e.fn||"function"!=typeof e.fn)return void console.error(`Unable to register event: ${e.name} - ${e.type} requires a callback function`);j.push(e),r.ipcMain.handle(e.name,e.fn);break;case"on":if(!e.fn||"function"!=typeof e.fn)return void console.error(`Unable to register event: ${e.name} - ${e.type} requires a callback function`);j.push(e),r.ipcMain.on(e.name,e.fn);break;case"send":j.push(e);break;default:console.log(`Event type: ${e.type} not found. IPC event: ${e.name} has not been registered. `)}else console.error("Unable to register event - event requires a name")},O=e=>{for(const r in e)k(e[r])},E=()=>{k({name:"events-all",type:"invoke",fn:()=>new Promise((e=>{e({error:!1,data:{events:JSON.parse(JSON.stringify(j))}})}))})};var P={register:k,registerAll:O},U={};function $(e,...n){const t=r.BrowserWindow.getAllWindows()[0];void 0!==t&&t.webContents.send(e,...n)}m(U),u(U,"send",(()=>$)),u(U,"default",(()=>N));var N={send:$};p(h,{}),p(h,S),p(h,U);var q=e.resolve(__dirname,"../src/main/services/exporter");const M={source:d(e).join(q,"course-template"),out:d(e).join(q,"course-packs")},x=()=>new Promise((e=>{const r={version:"1.2",organization:"OSG",language:"en-US",startingPage:"content/index.html",source:M.source,package:{version:"0.0.1",zip:!0,outputFolder:M.out}};(()=>{let e="";for(e in M)d(i).existsSync(M[e])||d(i).mkdirSync(M[e])})(),d(a)(r,(r=>{e(r)}))})),D={package:{name:"package-course",type:"invoke",fn:x}},T=()=>{O(D)};var I={EVENTS:D,init:T,pack:x};p(w,{}),p(w,b);var _={},A={};m(A),u(A,"archive",(()=>C)),u(A,"default",(()=>F));const C=(e,r)=>{try{const n=new(d(s));return n.addLocalFolder(e),n.writeZip(r),{error:!1,data:{filename:r}}}catch(n){return{error:!0,message:n&&"string"==typeof n?n:`Unable to archive: ${e} to ${r} - unknown reason`}}};var F={archive:C},V={};m(V),u(V,"MEDIA_TYPES",(()=>R)),u(V,"getDialogMediaFilters",(()=>W)),u(V,"dialogOpen",(()=>z)),u(V,"dialogSave",(()=>B)),u(V,"default",(()=>J));const R={image:{name:"Image",extensions:["jpg","jpeg","png"]},video:{name:"Video",extensions:["mp4","mkv","avi"]},project:{name:"Scrowl Project",extensions:["scrowl"]}},W=e=>e.map((e=>R[e])),z=e=>new Promise(((n,t)=>{r.dialog.showOpenDialog(e).then((({canceled:e,filePaths:r})=>{n({error:!1,data:{canceled:e,filePaths:r}})})).catch((e=>{t({error:!0,message:e&&"string"==typeof e?e:"Unable to open dialog - unknown reason"})}))})),B=e=>new Promise(((n,t)=>{r.dialog.showSaveDialog(e).then((({canceled:e,filePath:r})=>{n({error:!1,data:{canceled:e,filePath:r}})})).catch((e=>{t({error:!0,message:e&&"string"==typeof e?e:"Unable to save dialog - unknown reason"})}))}));var J={dialogOpen:z,dialogSave:B},L={};m(L),u(L,"join",(()=>H)),u(L,"ext",(()=>Y)),u(L,"dirExistsSync",(()=>K)),u(L,"dirTempSync",(()=>Q)),u(L,"fileExistsSync",(()=>X)),u(L,"fileReadSync",(()=>ee)),u(L,"fileWriteSync",(()=>re)),u(L,"fileCopySync",(()=>ne)),u(L,"fileTempSync",(()=>te)),u(L,"default",(()=>oe));const G=r=>d(e).normalize(r),Z=e=>/.json$/.test(e)||/.project$/.test(e),H=(...r)=>d(e).join.apply(null,r),Y=r=>d(e).extname(r),K=e=>{try{return{error:!1,data:{exists:d(i).existsSync(G(e))}}}catch(r){return{error:!0,message:r&&"string"==typeof r?r:`Unable to check directory existance: ${e} - unknown reason`}}},Q=r=>{let n;try{return n=d(i).mkdtempSync(d(e).join(d(l).tmpdir(),""+(r?`${r}_`:""))),{error:!1,data:{pathname:n}}}catch(e){return{error:!0,message:e&&"string"==typeof e?e:`Unable to create temp directory: ${r} - unknown reason`}}},X=e=>{try{return{error:!1,data:{exists:d(i).pathExistsSync(e)}}}catch(r){return{error:!0,message:r&&"string"==typeof r?r:`Unable to check file existance: ${e} - unknown reason`}}},ee=(e,r="utf8")=>{const n=X(e);if(n.error)return n;void 0===r&&(r="utf8");const t=G(e);try{let e;const n=d(i).readFileSync(t,{encoding:r,flag:"r"});return e=Z(t)?JSON.parse(n):n,{error:!1,data:{filename:t,contents:e}}}catch(r){return{error:!0,message:r&&"string"==typeof r?r:`Unable to read file: ${e} - unknown reason`}}},re=(e,r)=>{const n=G(e);if(!r)return{error:!0,message:`Unable to write file: ${e} - contents required`};try{return Z(e)&&(r="string"!=typeof r?JSON.stringify(r,null,2):JSON.stringify(JSON.parse(r),null,2)),d(i).outputFileSync(n,r),{error:!1,data:{filename:n}}}catch(r){return{error:!0,message:r&&"string"==typeof r?r:`Unable to write file: ${e} - unknown reason`}}},ne=(e,r)=>{const n=G(e),t=G(r);try{return d(i).copySync(n,t),{error:!1,data:{filename:t}}}catch(n){return{error:!0,message:n&&"string"==typeof n?n:`Unable to copy: ${e} to ${r} - unknown reason`}}},te=(r,n)=>{const t=`${n}/${d(e).basename(r)}`;return ne(r,t)};var oe={join:H,ext:Y,dirExistsSync:K,dirTempSync:Q,fileExistsSync:X,fileReadSync:ee,fileWriteSync:re,fileCopySync:ne,fileTempSync:te};p(_,{}),p(_,A),p(_,V),p(_,L);var ie={},ae={};m(ae),u(ae,"get",(()=>ce)),u(ae,"set",(()=>de)),u(ae,"default",(()=>pe));var se=e.resolve(__dirname,"../src/main/services/internal-storage");const le=d(c)({client:"sqlite3",connection:{filename:d(e).join(se,"./scrowl.sqlite")},useNullAsDefault:!0}),ce=(e,r)=>r?le.select(r).from(e):le.select().from(e),de=(e,r)=>le(e).update(r);var pe={get:ce,set:de};p(ie,{}),p(ie,ae);var me={},ue={};m(ue),u(ue,"init",(()=>Ee)),u(ue,"default",(()=>Pe));const fe={itemList:{name:"menu/items",type:"invoke",fn:()=>new Promise((e=>{e({error:!1,data:{items:JSON.parse(JSON.stringify(ge))}})}))},itemToggle:{name:"menu/item/toggle",type:"invoke",fn:(e,n)=>new Promise((e=>{if(!n)return void e({error:!0,message:"Unable to toggle item - No item"});const t=r.Menu.getApplicationMenu();if(!t)return void e({error:!0,message:`Unable to toggle item: ${n.name} - Menu not initialized`});const o=t.getMenuItemById(n.id);o?(o.enabled=!o.enabled,e({error:!1,data:{item:n,enabled:o.enabled}})):e({error:!0,message:`Unable to toggle item: ${n.name} - Item not found`})}))},itemDisable:{name:"menu/item/disable",type:"invoke",fn:(e,n)=>new Promise((e=>{if(!n)return void e({error:!0,message:"Unable to disable item - No item"});const t=r.Menu.getApplicationMenu();if(!t)return void e({error:!0,message:`Unable to disable item: ${n.name} - Menu not initialized`});const o=t.getMenuItemById(n.id);o?(o.enabled=!1,e({error:!1,data:{item:n,enabled:o.enabled}})):e({error:!0,message:`Unable to disable item: ${n.name} - Item not found`})}))},itemEnable:{name:"menu/item/enable",type:"invoke",fn:(e,n)=>new Promise((e=>{if(!n)return void e({error:!0,message:"Unable to enable item - No item"});const t=r.Menu.getApplicationMenu();if(!t)return void e({error:!0,message:`Unable to enable item: ${n.name} - Menu not initialized`});const o=t.getMenuItemById(n.id);o?(o.enabled=!0,e({error:!1,data:{item:n,enabled:o.enabled}})):e({error:!0,message:`Unable to enable item: ${n.name} - Item not found`})}))}};let ge={};const ve=e=>{O(fe),ge=e};const ye={type:"separator"},we={aboutOpen:{id:"about-open",name:"menu/about/open",type:"on",fn:()=>{console.log("Open about Scrowl window...")}},preferencesOpen:{id:"preferences-open",name:"menu/preferences/open",type:"on",fn:()=>{console.log("Open preferences window...")}}},be={label:"Scrowl",submenu:[{label:"About Scrowl",id:we.aboutOpen.id,click:()=>{$(we.aboutOpen.name)}},ye,{label:"Preferencesâ€¦",id:we.preferencesOpen.id,click:()=>{$(we.preferencesOpen.name)},accelerator:"CmdOrCtrl+,"},ye,{role:"services",submenu:[]},ye,{role:"hide"},{role:"hideOthers"},{role:"unhide"},ye,{role:"quit"}]},he=()=>{O(we)};const Se={projectNew:{id:"new-project",name:"menu/project/new",type:"send"},projectSave:{id:"save-project",name:"menu/project/save",type:"send"},projectSaveAs:{id:"save-project-as",name:"menu/project/save-as",type:"send"},importFile:{id:"import-file",name:"menu/project/import",type:"send"}},je={label:"File",submenu:[{label:"New Project...",id:Se.projectNew.id,click:()=>{$(Se.projectNew.name)},accelerator:"CmdOrCtrl+N"},{type:"separator"},{label:"Save",id:Se.projectSave.id,click:()=>{$(Se.projectSave.name,!1)},accelerator:"CmdOrCtrl+S"},{label:"Save As...",id:Se.projectSaveAs.id,click:()=>{$(Se.projectSaveAs.name,!0)},accelerator:"CmdOrCtrl+Shift+S"},{label:"Import File",id:Se.importFile.id,click:()=>{$(Se.importFile.name,!0)},accelerator:"CmdOrCtrl+I"}]},ke=()=>{O(Se)};const Oe=e=>{let r={};const n=[];return e&&(n.push(be),he(),r=Object.assign(r,we)),n.push(je),ke(),r=Object.assign(r,Se),{template:n,EVENTS:r}};const Ee=e=>{const n=Oe(e),t=r.Menu.buildFromTemplate(n.template),o=Object.assign(fe,n.EVENTS);ve(o),r.Menu.setApplicationMenu(t)};var Pe={init:Ee};p(me,{}),p(me,ue);const Ue=function(e,r){const n=_.dirTempSync("scrowl");if(n.error)return n;const t=`${n.data.pathname}/scrowl.project`,o=_.fileWriteSync(t,r);return o.error?o:(r.workingFile=t,r.workingDir=t.split("/").slice(0,-1).join("/"),{error:!1,data:{filename:t,project:r}})},$e=(e,r,n)=>new Promise((e=>{const t=n=>{if(!r.workingDir)return void e({error:!0,message:"Unable to save project - working directory required"});if(n.error)return void e(n);const t=(o=r.workingDir,i=n.data.filePath,o?i?_.archive(o,i):{error:!0,message:"project requires a filename"}:{error:!0,message:"project requires a source"});var o,i;if(t.error)e(t);else try{r.saveFile=t.data.filename,r.saveDir=t.data.filename.split("/").slice(0,-1).join("/"),e({error:!1,data:{filename:t.data.filename,project:r}})}catch(r){e({error:!0,message:r&&"string"==typeof r?r:"Unable to save project - unknown reason"})}};r||e({error:!0,message:"Unable to save project - project data required"}),r.workingDir||e({error:!0,message:"Unable to save project - working directory required"}),!r.saveDir||n?_.dialogSave({title:"Scrowl - Save Project",filters:[{name:"Scrowl Project",extensions:["scrowl"]}]}).then(t):t({error:!1,data:{canceled:!1,filePath:r.saveDir}})})),Ne=(e,r,n)=>new Promise((e=>{if(!n)return void e({error:!0,message:"Unable to import a file - project required"});if(!n.workingDir)return void e({error:!0,message:"Unable to import a file - project working directory required"});if(!r||!r.length)return void e({error:!0,message:"Unable to import a file - file types required"});const t=_.getDialogMediaFilters(r);if(!t.length)return void e({error:!0,message:`Unable to import a file: ${r.join(", ")} - not supported`});const o={title:"Scrowl - Import File",filters:t};_.dialogOpen(o).then((r=>{if(r.error)return void e(r);if(!r.data.filePaths.length)return void e({error:!0,message:"Unable to import file - no file selected"});const t=r.data.filePaths[0];if(!n.workingDir)return void e({error:!0,message:"Unable to import a file - project working directory required"});const o=_.fileTempSync(t,n.workingDir);o.error&&e(o);const i=o.data.filename;n.workingImports=n.workingImports||[],n.workingImports.push(i),e({error:!1,data:{project:n,import:i}})}))})),qe={new:{name:"project/new",type:"invoke",fn:Ue},save:{name:"project/save",type:"invoke",fn:$e},import:{name:"project/import-file",type:"invoke",fn:Ne}},Me=()=>{h.registerAll(qe)},xe={EVENTS:qe,init:Me,create:Ue,save:$e,importFile:Ne};var De=xe;p(v,{}),p(v,y);var Te={},Ie={};m(Ie),u(Ie,"get",(()=>_e)),u(Ie,"set",(()=>Ae)),u(Ie,"EVENTS",(()=>Fe)),u(Ie,"init",(()=>Ve)),u(Ie,"Preferences",(()=>Re)),u(Ie,"default",(()=>We));const _e=async e=>(await ie.get("preferences",e))[0],Ae=e=>ie.set("preferences",e),Ce=(e,r)=>{if("number"!=typeof r)return _e(r)},Fe={list:{name:"preferences/get",type:"invoke",fn:Ce},get:{name:"preferences/get/preference",type:"invoke",fn:Ce},set:{name:"preferences/set",type:"invoke",fn:(e,r)=>Ae(r)}},Ve=()=>{h.registerAll(Fe)},Re={EVENTS:Fe,init:Ve,get:_e,set:Ae};var We=Re;p(Te,{}),p(Te,Ie);const ze=[Te,v],Be=()=>{ze.forEach((e=>{e.init()}))};var Je=e.resolve(__dirname,"../src/main");const Le=d(e).join(Je,"../../");let Ge=null;const Ze="development"===process.env.NODE_ENV||"true"===process.env.DEBUG_PROD,He="darwin"===process.platform,Ye=async()=>{if(Ze){d(n)();const e=await Promise.all([d(t)(t.REACT_DEVELOPER_TOOLS)]);console.log(`\n\nAdded Extensions: ${e}\n\n`)}const o=r.app.isPackaged?d(e).join(process.resourcesPath,"assets"):d(e).join(Le,"dist","assets"),i=(...r)=>d(e).join(o,...r);if(Ge=function(e){const n={titleBarStyle:"hidden",show:!1,width:1024,minWidth:1024,height:728,icon:i("icon.png"),webPreferences:{preload:e}};try{return new r.BrowserWindow(n)}catch(r){return console.error(e,"\n",r),null}}(d(e).join(Le,"dist","preload.js")),!Ge)throw"Unable to create Browser Window";w.init(),Be(),Ge.loadURL(g("renderer.html")),Ge.on("ready-to-show",(()=>{if(!Ge)throw new Error('"mainWindow" is not defined');process.env.START_MINIMIZED?Ge.minimize():(Ge.show(),Ge.webContents.openDevTools({mode:"detach"}))})),Ge.on("closed",(()=>{Ge=null})),Ge.webContents.setWindowOpenHandler((e=>(r.shell.openExternal(e.url),{action:"deny"})))};r.app.on("window-all-closed",(()=>{"darwin"!==process.platform&&r.app.quit()})),r.app.whenReady().then((()=>{(()=>{const e="scrowl-file";r.protocol.registerFileProtocol(e,((e,r)=>{const n=e.url.replace("scrowl-file://","");try{return r(decodeURIComponent(n))}catch(e){console.error(e)}}))})(),me.init(He),h.init(),Ye(),r.app.on("activate",(()=>{null===Ge&&Ye()}))})).catch(console.log);
//# sourceMappingURL=main.js.map
