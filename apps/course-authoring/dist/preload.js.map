{"mappings":"0BAEAA,EAAAC,cAAcC,kBAAkB,WAAY,CAC1CC,YAAa,CACXC,SACEJ,EAAAG,YAAYE,KAAK,cAAe,SAElCC,GAAGC,EAAiBC,GAElB,GADsB,CAAC,eACLC,SAASF,GAAU,CACnC,MAAMG,EAAe,CAACC,KAA6BC,IACjDJ,KAAQI,GAIV,OAFAZ,EAAAG,YAAYG,GAAGC,EAASG,GAEjB,IAAMV,EAAAG,YAAYU,eAAeN,EAASG,KAKrDI,KAAKP,EAAiBC,GACE,CAAC,eACLC,SAASF,IAEzBP,EAAAG,YAAYW,KAAKP,GAAS,CAACI,KAAWC,IAASJ,KAAQI","sources":["apps/course-authoring/src/main/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer, IpcRendererEvent } from 'electron';\n\ncontextBridge.exposeInMainWorld('electron', {\n  ipcRenderer: {\n    myPing() {\n      ipcRenderer.send('ipc-example', 'ping');\n    },\n    on(channel: string, func: (...args: unknown[]) => void) {\n      const validChannels = ['ipc-example'];\n      if (validChannels.includes(channel)) {\n        const subscription = (_event: IpcRendererEvent, ...args: unknown[]) =>\n          func(...args);\n        // Deliberately strip event as it includes `sender`\n        ipcRenderer.on(channel, subscription);\n\n        return () => ipcRenderer.removeListener(channel, subscription);\n      }\n\n      return undefined;\n    },\n    once(channel: string, func: (...args: unknown[]) => void) {\n      const validChannels = ['ipc-example'];\n      if (validChannels.includes(channel)) {\n        // Deliberately strip event as it includes `sender`\n        ipcRenderer.once(channel, (_event, ...args) => func(...args));\n      }\n    },\n  },\n});"],"names":["$jKToa$electron","contextBridge","exposeInMainWorld","ipcRenderer","myPing","send","on","channel","func","includes","subscription","_event","args","removeListener","once"],"version":3,"file":"preload.js.map"}