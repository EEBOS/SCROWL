{"mappings":"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","sources":["apps/course-authoring/src/main/util.ts","apps/course-authoring/src/main/services/requester/service-requester-register.ts","apps/course-authoring/src/main/services/requester/service-requester-sender.ts","apps/course-authoring/src/main/services/exporter/service-exporter.ts","apps/course-authoring/src/main/services/file-system/service-fs-archiver.ts","apps/course-authoring/src/main/services/file-system/service-fs-dialog.ts","apps/course-authoring/src/main/services/file-system/service-fs-files.ts","apps/course-authoring/src/main/services/internal-storage/service-is.ts","apps/course-authoring/src/main/services/menu/service-menu-globals.ts","apps/course-authoring/src/main/services/menu/templates/service-menu-items-app.ts","apps/course-authoring/src/main/services/menu/templates/service-menu-items-file.ts","apps/course-authoring/src/main/services/menu/templates/service-menu-templates.ts","apps/course-authoring/src/main/services/menu/service-menu.ts","apps/course-authoring/src/main/models/project/model-project.ts","apps/course-authoring/src/main/models/preferences/model-preferences.ts","apps/course-authoring/src/main/models/model-service.ts","apps/course-authoring/src/main/index.ts"],"sourcesContent":["/* eslint import/prefer-default-export: off, import/no-mutable-exports: off */\nimport { URL } from 'url';\nimport path from 'path';\n\nexport let resolveHtmlPath: (htmlFileName: string) => string;\n\nif (process.env.NODE_ENV === 'development') {\n  const port = process.env.PORT || 1234;\n  resolveHtmlPath = (htmlFileName: string) => {\n    const url = new URL(`http://localhost:${port}`);\n    url.pathname = htmlFileName;\n    return url.href;\n  };\n} else {\n  resolveHtmlPath = (htmlFileName: string) => {\n    return `file://${path.join(__dirname, '../../', 'dist', htmlFileName)}`;\n  };\n}\n","import { ipcMain } from 'electron';\nimport {\n  RegisterEvent,\n  RegisterEvents,\n  ApiResult,\n} from './service-requester.types';\n\nconst EVENTS: Array<RegisterEvent> = [];\n\nexport const register = (event: RegisterEvent) => {\n  if (!event.name) {\n    console.error(`Unable to register event - event requires a name`);\n    return;\n  }\n\n  switch (event.type) {\n    case 'invoke':\n      if (!event.fn || typeof event.fn !== 'function') {\n        console.error(\n          `Unable to register event: ${event.name} - ${event.type} requires a callback function`\n        );\n        return;\n      }\n\n      EVENTS.push(event);\n      ipcMain.handle(event.name, event.fn);\n      break;\n    case 'on':\n      if (!event.fn || typeof event.fn !== 'function') {\n        console.error(\n          `Unable to register event: ${event.name} - ${event.type} requires a callback function`\n        );\n        return;\n      }\n\n      EVENTS.push(event);\n      ipcMain.on(event.name, event.fn);\n      break;\n    case 'send':\n      EVENTS.push(event);\n      break;\n    default:\n      console.log(\n        `Event type: ${event.type} not found. IPC event: ${event.name} has not been registered. `\n      );\n      break;\n  }\n};\n\nexport const registerAll = (events: RegisterEvents) => {\n  for (const key in events) {\n    register(events[key]);\n  }\n};\n\nexport const init = () => {\n  register({\n    name: 'events-all',\n    type: 'invoke',\n    fn: () => {\n      return new Promise<ApiResult>(resolve => {\n        resolve({\n          error: false,\n          data: {\n            events: JSON.parse(JSON.stringify(EVENTS)),\n          },\n        });\n      });\n    },\n  });\n};\n\nexport default {\n  register,\n  registerAll,\n};\n","import { BrowserWindow } from 'electron';\nimport { MenuItemEventNames } from '../menu/service-menu.types';\n\nexport function send(name: MenuItemEventNames, ...args: unknown[]) {\n  const window = BrowserWindow.getAllWindows()[0];\n\n  if (window !== undefined) {\n    window.webContents.send(name, ...args);\n  }\n}\n\nexport default {\n  send,\n};\n","import path from 'path';\nimport fs from 'fs-extra';\nimport packager from 'scorm-packager';\nimport {\n  PathingProps,\n  PathingKey,\n  ExporterEvents,\n} from './service-exporter.types';\nimport { registerAll } from '../requester';\n\nconst pathing: PathingProps = {\n  source: path.join(__dirname, 'course-template'),\n  out: path.join(__dirname, 'course-packs'),\n};\n\nconst setPathing = () => {\n  let dest = '' as PathingKey;\n\n  for (dest in pathing) {\n    if (!fs.existsSync(pathing[dest])) {\n      fs.mkdirSync(pathing[dest]);\n    }\n  }\n};\n\nexport const pack = () => {\n  return new Promise(resolve => {\n    const config = {\n      version: '1.2',\n      organization: 'OSG',\n      language: 'en-US',\n      startingPage: 'content/index.html',\n      source: pathing.source,\n      package: {\n        version: '0.0.1',\n        zip: true,\n        outputFolder: pathing.out,\n      },\n    };\n\n    setPathing();\n    packager(config, (msg: string) => {\n      resolve(msg);\n    });\n  });\n};\n\nexport const EVENTS: ExporterEvents = {\n  package: {\n    name: 'package-course',\n    type: 'invoke',\n    fn: pack,\n  },\n};\n\nexport const init = () => {\n  registerAll(EVENTS);\n};\n\nexport default {\n  EVENTS,\n  init,\n  pack,\n};\n","import AdmZip from 'adm-zip';\nimport { FileDataResult } from './service-fs.types';\n\nexport const archive = (source: string, dest: string): FileDataResult => {\n  try {\n    const zip = new AdmZip();\n\n    zip.addLocalFolder(source);\n\n    zip.writeZip(dest);\n\n    return {\n      error: false,\n      data: {\n        filename: dest,\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to archive: ${source} to ${dest} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport default {\n  archive,\n};\n","import { dialog, OpenDialogOptions, SaveDialogOptions } from 'electron';\nimport {\n  DialogOpenResult,\n  DialogSaveResult,\n  FileFilters,\n  AllowedFiles,\n} from './service-fs.types';\n\nexport const MEDIA_TYPES: FileFilters = {\n  image: { name: 'Image', extensions: ['jpg', 'jpeg', 'png'] },\n  video: { name: 'Video', extensions: ['mp4', 'mkv', 'avi'] },\n  project: { name: 'Scrowl Project', extensions: ['scrowl'] },\n};\n\nexport const getDialogMediaFilters = (filters: Array<AllowedFiles>) => {\n  return filters.map(filter => MEDIA_TYPES[filter]);\n};\n\nexport const dialogOpen = (options: OpenDialogOptions) => {\n  return new Promise<DialogOpenResult>((resolve, reject) => {\n    dialog\n      .showOpenDialog(options)\n      .then(({ canceled, filePaths }) => {\n        resolve({\n          error: false,\n          data: {\n            canceled,\n            filePaths,\n          },\n        });\n      })\n      .catch(err => {\n        const message =\n          err && typeof err === 'string'\n            ? err\n            : `Unable to open dialog - unknown reason`;\n\n        reject({\n          error: true,\n          message,\n        });\n      });\n  });\n};\n\nexport const dialogSave = (options: SaveDialogOptions) => {\n  return new Promise<DialogSaveResult>((resolve, reject) => {\n    dialog\n      .showSaveDialog(options)\n      .then(({ canceled, filePath }) => {\n        resolve({\n          error: false,\n          data: {\n            canceled,\n            filePath,\n          },\n        });\n      })\n      .catch(err => {\n        const message =\n          err && typeof err === 'string'\n            ? err\n            : `Unable to save dialog - unknown reason`;\n\n        reject({\n          error: true,\n          message,\n        });\n      });\n  });\n};\n\nexport default {\n  dialogOpen,\n  dialogSave,\n};\n","import fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport {\n  FileExistsResult,\n  DirectoryTempResult,\n  FileDataResult,\n} from './service-fs.types';\n\nconst normalize = (pathname: string) => {\n  return path.normalize(pathname);\n};\n\nconst isJSON = (name: string) => {\n  return /.json$/.test(name) || /.project$/.test(name);\n};\n\nexport const join = (...paths: Array<string>) => {\n  return path.join.apply(null, paths);\n};\n\nexport const ext = (pathname: string) => {\n  return path.extname(pathname);\n};\n\nexport const dirExistsSync = (pathname: string): FileExistsResult => {\n  try {\n    return {\n      error: false,\n      data: {\n        exists: fs.existsSync(normalize(pathname)),\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to check directory existance: ${pathname} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const dirTempSync = (prefix: string): DirectoryTempResult => {\n  let tmpDir;\n\n  try {\n    tmpDir = fs.mkdtempSync(\n      path.join(os.tmpdir(), `${prefix ? `${prefix}_` : ''}`)\n    );\n\n    return {\n      error: false,\n      data: {\n        pathname: tmpDir,\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to create temp directory: ${prefix} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const fileExistsSync = (pathname: string): FileExistsResult => {\n  try {\n    return {\n      error: false,\n      data: {\n        exists: fs.pathExistsSync(pathname),\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to check file existance: ${pathname} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const fileReadSync = (\n  pathname: string,\n  media: BufferEncoding = 'utf8'\n): FileDataResult | FileExistsResult => {\n  const exists = fileExistsSync(pathname);\n\n  if (exists.error) {\n    return exists;\n  }\n\n  if (media === undefined) {\n    media = 'utf8';\n  }\n\n  const filename = normalize(pathname);\n\n  try {\n    let contents;\n    const file = fs.readFileSync(filename, { encoding: media, flag: 'r' });\n\n    if (isJSON(filename)) {\n      contents = JSON.parse(file);\n    } else {\n      contents = file;\n    }\n\n    return {\n      error: false,\n      data: {\n        filename,\n        contents,\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to read file: ${pathname} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const fileWriteSync = (\n  pathname: string,\n  contents: unknown\n): FileDataResult => {\n  const filename = normalize(pathname);\n\n  if (!contents) {\n    return {\n      error: true,\n      message: `Unable to write file: ${pathname} - contents required`,\n    };\n  }\n\n  try {\n    if (isJSON(pathname)) {\n      if (typeof contents !== 'string') {\n        contents = JSON.stringify(contents, null, 2);\n      } else {\n        contents = JSON.stringify(JSON.parse(contents), null, 2);\n      }\n    }\n\n    fs.outputFileSync(filename, contents);\n\n    return {\n      error: false,\n      data: {\n        filename,\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to write file: ${pathname} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const fileCopySync = (source: string, dest: string): FileDataResult => {\n  const sourcePath = normalize(source);\n  const destPath = normalize(dest);\n\n  try {\n    fs.copySync(sourcePath, destPath);\n\n    return {\n      error: false,\n      data: {\n        filename: destPath,\n      },\n    };\n  } catch (err) {\n    const message =\n      err && typeof err === 'string'\n        ? err\n        : `Unable to copy: ${source} to ${dest} - unknown reason`;\n\n    return {\n      error: true,\n      message,\n    };\n  }\n};\n\nexport const fileTempSync = (source: string, dest: string): FileDataResult => {\n  const destFile = `${dest}/${path.basename(source)}`;\n\n  return fileCopySync(source, destFile);\n};\n\nexport default {\n  join,\n  ext,\n  dirExistsSync,\n  dirTempSync,\n  fileExistsSync,\n  fileReadSync,\n  fileWriteSync,\n  fileCopySync,\n  fileTempSync,\n};\n","import knex from 'knex';\nimport path from 'path';\nimport { DatabaseData } from './service-is.types';\n\nconst DB = knex({\n  client: 'sqlite3',\n  connection: {\n    filename: path.join(__dirname, './scrowl.sqlite'),\n  },\n  useNullAsDefault: true,\n});\n\nexport const get = (tableName: string, column?: string) => {\n  if (column) {\n    return DB.select(column).from(tableName);\n  }\n\n  return DB.select().from(tableName);\n};\n\nexport const set = (tableName: string, data: DatabaseData) => {\n  return DB(tableName).update(data);\n};\n\nexport default {\n  get,\n  set,\n};\n","import { IpcMainInvokeEvent, Menu } from 'electron';\nimport {\n  MenuItemEvent,\n  MenuEventsGlobal,\n  MenuItems,\n} from './service-menu.types';\nimport { ApiResult, registerAll } from '../requester';\n\nconst itemListHandler = () => {\n  return new Promise<ApiResult>(resolve => {\n    resolve({\n      error: false,\n      data: {\n        items: JSON.parse(JSON.stringify(ITEMS)),\n      },\n    });\n  });\n};\n\nconst itemToggleHandler = (event: IpcMainInvokeEvent, item: MenuItemEvent) => {\n  return new Promise<ApiResult>(resolve => {\n    if (!item) {\n      resolve({\n        error: true,\n        message: `Unable to toggle item - No item`,\n      });\n      return;\n    }\n\n    const appMenu = Menu.getApplicationMenu();\n\n    if (!appMenu) {\n      resolve({\n        error: true,\n        message: `Unable to toggle item: ${item.name} - Menu not initialized`,\n      });\n      return;\n    }\n\n    const menuItem = appMenu.getMenuItemById(item.id);\n\n    if (!menuItem) {\n      resolve({\n        error: true,\n        message: `Unable to toggle item: ${item.name} - Item not found`,\n      });\n      return;\n    }\n\n    menuItem.enabled = !menuItem.enabled;\n\n    resolve({\n      error: false,\n      data: {\n        item,\n        enabled: menuItem.enabled,\n      },\n    });\n  });\n};\n\nconst itemDisableHandler = (event: IpcMainInvokeEvent, item: MenuItemEvent) => {\n  return new Promise<ApiResult>(resolve => {\n    if (!item) {\n      resolve({\n        error: true,\n        message: `Unable to disable item - No item`,\n      });\n      return;\n    }\n\n    const appMenu = Menu.getApplicationMenu();\n\n    if (!appMenu) {\n      resolve({\n        error: true,\n        message: `Unable to disable item: ${item.name} - Menu not initialized`,\n      });\n      return;\n    }\n\n    const menuItem = appMenu.getMenuItemById(item.id);\n\n    if (!menuItem) {\n      resolve({\n        error: true,\n        message: `Unable to disable item: ${item.name} - Item not found`,\n      });\n      return;\n    }\n\n    menuItem.enabled = false;\n\n    resolve({\n      error: false,\n      data: {\n        item,\n        enabled: menuItem.enabled,\n      },\n    });\n  });\n};\n\nconst itemEnableHandler = (event: IpcMainInvokeEvent, item: MenuItemEvent) => {\n  return new Promise<ApiResult>(resolve => {\n    if (!item) {\n      resolve({\n        error: true,\n        message: `Unable to enable item - No item`,\n      });\n      return;\n    }\n\n    const appMenu = Menu.getApplicationMenu();\n\n    if (!appMenu) {\n      resolve({\n        error: true,\n        message: `Unable to enable item: ${item.name} - Menu not initialized`,\n      });\n      return;\n    }\n\n    const menuItem = appMenu.getMenuItemById(item.id);\n\n    if (!menuItem) {\n      resolve({\n        error: true,\n        message: `Unable to enable item: ${item.name} - Item not found`,\n      });\n      return;\n    }\n\n    menuItem.enabled = true;\n\n    resolve({\n      error: false,\n      data: {\n        item,\n        enabled: menuItem.enabled,\n      },\n    });\n  });\n};\n\nexport const EVENTS: MenuEventsGlobal = {\n  itemList: {\n    name: 'menu/items',\n    type: 'invoke',\n    fn: itemListHandler,\n  },\n  itemToggle: {\n    name: 'menu/item/toggle',\n    type: 'invoke',\n    fn: itemToggleHandler,\n  },\n  itemDisable: {\n    name: 'menu/item/disable',\n    type: 'invoke',\n    fn: itemDisableHandler,\n  },\n  itemEnable: {\n    name: 'menu/item/enable',\n    type: 'invoke',\n    fn: itemEnableHandler,\n  },\n};\n\nexport let ITEMS: MenuItems = {};\n\nexport const init = (items: MenuItems) => {\n  registerAll(EVENTS);\n  ITEMS = items;\n};\n\nexport default {\n  EVENTS,\n  ITEMS,\n  init,\n};\n","import { MenuItemConstructorOptions } from 'electron';\nimport { send, registerAll } from '../../requester';\nimport { MenuItemEventsApp } from '../service-menu.types';\n\nconst separator: MenuItemConstructorOptions = { type: 'separator' };\n\nconst aboutHandler = () => {\n  console.log('Open about Scrowl window...');\n};\n\nconst preferencesHandler = () => {\n  console.log('Open preferences window...');\n};\n\nexport const EVENTS: MenuItemEventsApp = {\n  aboutOpen: {\n    id: 'about-open',\n    name: 'menu/about/open',\n    type: 'on',\n    fn: aboutHandler,\n  },\n  preferencesOpen: {\n    id: 'preferences-open',\n    name: 'menu/preferences/open',\n    type: 'on',\n    fn: preferencesHandler,\n  },\n};\n\nexport const template: MenuItemConstructorOptions = {\n  label: 'Scrowl',\n  submenu: [\n    {\n      label: 'About Scrowl',\n      id: EVENTS.aboutOpen.id,\n      click: () => {\n        send(EVENTS.aboutOpen.name);\n      },\n    },\n    separator,\n    {\n      label: 'Preferences…',\n      id: EVENTS.preferencesOpen.id,\n      click: () => {\n        send(EVENTS.preferencesOpen.name);\n      },\n      accelerator: 'CmdOrCtrl+,',\n    },\n    separator,\n    {\n      role: 'services',\n      submenu: [],\n    },\n    separator,\n    { role: 'hide' },\n    { role: 'hideOthers' },\n    { role: 'unhide' },\n    separator,\n    { role: 'quit' },\n  ],\n};\n\nexport const init = () => {\n  registerAll(EVENTS);\n};\n\nexport default {\n  EVENTS,\n  init,\n  template,\n};\n","import { MenuItemConstructorOptions } from 'electron';\nimport { send, registerAll } from '../../requester';\nimport { MenuItemEventsFile } from '../service-menu.types';\n\nconst separator: MenuItemConstructorOptions = { type: 'separator' };\n\nexport const EVENTS: MenuItemEventsFile = {\n  projectNew: {\n    id: 'new-project',\n    name: 'menu/project/new',\n    type: 'send',\n  },\n  projectSave: {\n    id: 'save-project',\n    name: 'menu/project/save',\n    type: 'send',\n  },\n  projectSaveAs: {\n    id: 'save-project-as',\n    name: 'menu/project/save-as',\n    type: 'send',\n  },\n  importFile: {\n    id: 'import-file',\n    name: 'menu/project/import',\n    type: 'send',\n  },\n};\n\nexport const template: MenuItemConstructorOptions = {\n  label: 'File',\n  submenu: [\n    {\n      label: 'New Project...',\n      id: EVENTS.projectNew.id,\n      click: () => {\n        send(EVENTS.projectNew.name);\n      },\n      accelerator: 'CmdOrCtrl+N',\n    },\n    separator,\n    {\n      label: 'Save',\n      id: EVENTS.projectSave.id,\n      click: () => {\n        send(EVENTS.projectSave.name, false);\n      },\n      accelerator: 'CmdOrCtrl+S',\n    },\n    {\n      label: 'Save As...',\n      id: EVENTS.projectSaveAs.id,\n      click: () => {\n        send(EVENTS.projectSaveAs.name, true);\n      },\n      accelerator: 'CmdOrCtrl+Shift+S',\n    },\n    {\n      label: 'Import File',\n      id: EVENTS.importFile.id,\n      click: () => {\n        send(EVENTS.importFile.name, true);\n      },\n      accelerator: 'CmdOrCtrl+I',\n    },\n  ],\n};\n\nexport const init = () => {\n  registerAll(EVENTS);\n};\n\nexport default {\n  EVENTS,\n  init,\n  template,\n};\n","import { MenuItemConstructorOptions } from 'electron';\nimport { MenuItemEventsFile, MenuItemEventsApp } from '../service-menu.types';\nimport * as menuApp from './service-menu-items-app';\nimport * as menuFile from './service-menu-items-file';\n\nexport const createMenu = (\n  isMacOs: boolean\n): {\n  template: MenuItemConstructorOptions[];\n  EVENTS: Partial<MenuItemEventsFile> & Partial<MenuItemEventsApp>;\n} => {\n  let EVENTS = {};\n  const template = [];\n\n  if (isMacOs) {\n    template.push(menuApp.template);\n    menuApp.init();\n    EVENTS = Object.assign(EVENTS, menuApp.EVENTS);\n  }\n\n  template.push(menuFile.template);\n  menuFile.init();\n  EVENTS = Object.assign(EVENTS, menuFile.EVENTS);\n\n  return {\n    template,\n    EVENTS,\n  };\n};\n\nexport default {\n  createMenu,\n};\n","import { Menu } from 'electron';\nimport {\n  EVENTS as globalEvents,\n  init as globalInit,\n} from './service-menu-globals';\nimport { createMenu } from './templates';\n\nexport const init = (isMacOs: boolean) => {\n  const menuConfig = createMenu(isMacOs);\n  const menu = Menu.buildFromTemplate(menuConfig.template);\n  const items = Object.assign(globalEvents, menuConfig.EVENTS);\n\n  globalInit(items);\n  Menu.setApplicationMenu(menu);\n};\n\nexport default {\n  init,\n};\n","import { IpcMainInvokeEvent } from 'electron';\nimport { Model } from '../model.types';\nimport {\n  ProjectEvents,\n  CreateResult,\n  SaveResult,\n  ImportResult,\n  ProjectData,\n  ProjectDataNew,\n} from './model-project.types';\nimport { FileSystem as fs, Requester } from '../../services';\n\nexport const create = function (\n  event: IpcMainInvokeEvent,\n  project: ProjectData | ProjectDataNew\n): CreateResult {\n  const dirPrefix = 'scrowl';\n  const projectFileName = 'scrowl.project';\n  const tempDir: fs.DirectoryTempResult = fs.dirTempSync(dirPrefix);\n\n  if (tempDir.error) {\n    return tempDir;\n  }\n\n  const filename = `${tempDir.data.pathname}/${projectFileName}`;\n  const writeRes = fs.fileWriteSync(filename, project);\n\n  if (writeRes.error) {\n    return writeRes;\n  }\n\n  project.workingFile = filename;\n  project.workingDir = filename.split('/').slice(0, -1).join('/');\n\n  return {\n    error: false,\n    data: {\n      filename: filename,\n      project: project,\n    },\n  };\n};\n\nconst write = function (source: string, filename: string): fs.FileDataResult {\n  if (!source) {\n    return {\n      error: true,\n      message: 'project requires a source',\n    };\n  }\n\n  if (!filename) {\n    return {\n      error: true,\n      message: 'project requires a filename',\n    };\n  }\n\n  return fs.archive(source, filename);\n};\n\nexport const save = (\n  event: IpcMainInvokeEvent,\n  project: ProjectData | ProjectDataNew,\n  isSaveAs: boolean\n) => {\n  return new Promise<SaveResult>(resolve => {\n    const updateProject = (res: fs.DialogSaveResult) => {\n      if (!project.workingDir) {\n        resolve({\n          error: true,\n          message: 'Unable to save project - working directory required',\n        });\n        return;\n      }\n\n      if (res.error) {\n        resolve(res);\n        return;\n      }\n\n      const writeRes = write(project.workingDir, res.data.filePath);\n\n      if (writeRes.error) {\n        resolve(writeRes);\n        return;\n      }\n\n      try {\n        project.saveFile = writeRes.data.filename;\n        project.saveDir = writeRes.data.filename\n          .split('/')\n          .slice(0, -1)\n          .join('/');\n\n        resolve({\n          error: false,\n          data: {\n            filename: writeRes.data.filename,\n            project: project,\n          },\n        });\n      } catch (err) {\n        const message =\n          err && typeof err === 'string'\n            ? err\n            : 'Unable to save project - unknown reason';\n\n        resolve({\n          error: true,\n          message,\n        });\n      }\n    };\n    const dialogOptions = {\n      title: 'Scrowl - Save Project',\n      filters: [\n        {\n          name: 'Scrowl Project',\n          extensions: ['scrowl'],\n        },\n      ],\n    };\n\n    if (!project) {\n      resolve({\n        error: true,\n        message: 'Unable to save project - project data required',\n      });\n    }\n\n    if (!project.workingDir) {\n      resolve({\n        error: true,\n        message: 'Unable to save project - working directory required',\n      });\n    }\n\n    if (!project.saveDir || isSaveAs) {\n      fs.dialogSave(dialogOptions).then(updateProject);\n    } else {\n      updateProject({\n        error: false,\n        data: {\n          canceled: false,\n          filePath: project.saveDir,\n        },\n      });\n    }\n  });\n};\n\nexport const importFile = (\n  event: IpcMainInvokeEvent,\n  fileTypes: Array<fs.AllowedFiles>,\n  project: ProjectData | ProjectDataNew\n) => {\n  return new Promise<ImportResult>(resolve => {\n    if (!project) {\n      resolve({\n        error: true,\n        message: 'Unable to import a file - project required',\n      });\n      return;\n    }\n\n    if (!project.workingDir) {\n      resolve({\n        error: true,\n        message: 'Unable to import a file - project working directory required',\n      });\n      return;\n    }\n\n    if (!fileTypes || !fileTypes.length) {\n      resolve({\n        error: true,\n        message: 'Unable to import a file - file types required',\n      });\n      return;\n    }\n\n    const filters = fs.getDialogMediaFilters(fileTypes);\n\n    if (!filters.length) {\n      resolve({\n        error: true,\n        message: `Unable to import a file: ${fileTypes.join(\n          ', '\n        )} - not supported`,\n      });\n      return;\n    }\n\n    const dialogOptions = {\n      title: 'Scrowl - Import File',\n      filters,\n    };\n\n    fs.dialogOpen(dialogOptions).then(openRes => {\n      if (openRes.error) {\n        resolve(openRes);\n        return;\n      }\n\n      if (!openRes.data.filePaths.length) {\n        resolve({\n          error: true,\n          message: 'Unable to import file - no file selected',\n        });\n        return;\n      }\n\n      const importSource = openRes.data.filePaths[0];\n\n      if (!project.workingDir) {\n        resolve({\n          error: true,\n          message:\n            'Unable to import a file - project working directory required',\n        });\n        return;\n      }\n\n      const copyRes = fs.fileTempSync(importSource, project.workingDir);\n\n      if (copyRes.error) {\n        resolve(copyRes);\n      }\n\n      const workingImport = copyRes.data.filename;\n      project.workingImports = project.workingImports || [];\n      project.workingImports.push(workingImport);\n\n      resolve({\n        error: false,\n        data: {\n          project: project,\n          import: workingImport,\n        },\n      });\n    });\n  });\n};\n\nexport const EVENTS: ProjectEvents = {\n  new: {\n    name: 'project/new',\n    type: 'invoke',\n    fn: create,\n  },\n  save: {\n    name: 'project/save',\n    type: 'invoke',\n    fn: save,\n  },\n  import: {\n    name: 'project/import-file',\n    type: 'invoke',\n    fn: importFile,\n  },\n};\n\nexport const init = () => {\n  Requester.registerAll(EVENTS);\n};\n\nexport const Project: Model = {\n  EVENTS,\n  init,\n  create,\n  save,\n  importFile,\n};\n\nexport default Project;\n","import { Model } from '../model.types';\nimport { PreferenceData, PreferenceEvents } from './model-preferences.types';\nimport { InternalStorage as IS, Requester } from '../../services';\n\nconst TABLE_NAME = 'preferences';\n\nexport const get = async (preference?: string) => {\n  const res = await IS.get(TABLE_NAME, preference);\n\n  return res[0];\n};\n\nexport const set = (data: PreferenceData) => {\n  return IS.set(TABLE_NAME, data);\n};\n\nconst handlerGetPreference = (\n  event: Electron.IpcMainInvokeEvent,\n  preferenceName?: keyof PreferenceData\n) => {\n  if (typeof preferenceName === 'number') {\n    return;\n  }\n\n  return get(preferenceName);\n};\n\nconst handlerSetPreference = (\n  event: Electron.IpcMainInvokeEvent,\n  data: PreferenceData\n) => {\n  return set(data);\n};\n\nexport const EVENTS: PreferenceEvents = {\n  list: {\n    name: 'preferences/get',\n    type: 'invoke',\n    fn: handlerGetPreference,\n  },\n  get: {\n    name: 'preferences/get/preference',\n    type: 'invoke',\n    fn: handlerGetPreference,\n  },\n  set: {\n    name: 'preferences/set',\n    type: 'invoke',\n    fn: handlerSetPreference,\n  },\n};\n\nexport const init = () => {\n  Requester.registerAll(EVENTS);\n};\n\nexport const Preferences: Model = {\n  EVENTS,\n  init,\n  get,\n  set,\n};\n\nexport default Preferences;\n","import * as Project from './project';\nimport * as Preferences from './preferences';\n\nconst models = [Preferences, Project];\n\nexport const init = () => {\n  models.forEach(model => {\n    model.init();\n  });\n};\n\nexport default {\n  init,\n};\n","/**\n * This module executes inside of electron's main process. You can start\n * electron renderer process from here and communicate with the other processes\n * through IPC.\n */\nimport path from 'path';\nimport {\n  app,\n  BrowserWindow,\n  shell,\n  BrowserWindowConstructorOptions,\n  protocol,\n} from 'electron';\nimport electronDebug from 'electron-debug';\nimport installExtension, {\n  REACT_DEVELOPER_TOOLS,\n} from 'electron-devtools-installer';\nimport { resolveHtmlPath } from './util';\nimport { init as initModels } from './models';\nimport { Menu, Exporter, Requester } from './services';\n\nconst __rootdir = path.join(__dirname, '../../');\n\nlet mainWindow: BrowserWindow | null = null;\n\nconst isDevelopment =\n  process.env.NODE_ENV === 'development' || process.env.DEBUG_PROD === 'true';\n\nconst isDARWIN = process.platform === 'darwin';\n\nconst installExtensions = () => {\n  return Promise.all([installExtension(REACT_DEVELOPER_TOOLS)]);\n};\n\nconst createWindow = async () => {\n  if (isDevelopment) {\n    electronDebug();\n    const installResult = await installExtensions();\n\n    console.log(`\\n\\nAdded Extensions: ${installResult}\\n\\n`);\n  }\n\n  const RESOURCES_PATH = app.isPackaged\n    ? path.join(process.resourcesPath, 'assets')\n    : path.join(__rootdir, 'dist', 'assets');\n\n  const getAssetPath = (...paths: string[]): string => {\n    return path.join(RESOURCES_PATH, ...paths);\n  };\n\n  function getBrowserWindow(preloadPath: string) {\n    const browserWindowConfig: BrowserWindowConstructorOptions = {\n      titleBarStyle: 'hidden',\n      show: false,\n      width: 1024,\n      minWidth: 1024,\n      height: 728,\n      icon: getAssetPath('icon.png'),\n      webPreferences: {\n        preload: preloadPath,\n      },\n    };\n\n    try {\n      return new BrowserWindow(browserWindowConfig);\n    } catch (error) {\n      console.error(preloadPath, '\\n', error);\n      return null;\n    }\n  }\n\n  mainWindow = getBrowserWindow(path.join(__rootdir, 'dist', 'preload.js'));\n\n  if (!mainWindow) {\n    throw 'Unable to create Browser Window';\n  }\n\n  Exporter.init();\n  initModels();\n\n  mainWindow.loadURL(resolveHtmlPath('renderer.html'));\n\n  mainWindow.on('ready-to-show', () => {\n    if (!mainWindow) {\n      throw new Error('\"mainWindow\" is not defined');\n    }\n    if (process.env.START_MINIMIZED) {\n      mainWindow.minimize();\n    } else {\n      mainWindow.show();\n      mainWindow.webContents.openDevTools({ mode: 'detach' });\n    }\n  });\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  // Open urls in the user's browser\n  mainWindow.webContents.setWindowOpenHandler(edata => {\n    shell.openExternal(edata.url);\n    return { action: 'deny' };\n  });\n};\n\n/**\n * Register a custom protocol to load files from local disk\n * Using the protocol will avoid the Chromium security error: \" Not allowed to load local resource\"\n * due to the webPreferences: { webSecurity: true } when creating the window.\n * More info: https://github.com/electron/electron/issues/23757#issuecomment-640146333\n * Do not disable websecurity: https://www.electronjs.org/docs/latest/tutorial/security#6-do-not-disable-websecurity\n *\n * Using the custom protocol:\n * <img src='scrowl-file:///User/Images/img.jpeg' />\n */\nconst registerScrowlFileProtocol = () => {\n  const protocolName = 'scrowl-file';\n\n  protocol.registerFileProtocol(protocolName, (request, callback) => {\n    const url = request.url.replace(`${protocolName}://`, '');\n    try {\n      return callback(decodeURIComponent(url));\n    } catch (error) {\n      console.error(error);\n    }\n  });\n};\n\n/**\n * Add event listeners...\n */\n\napp.on('window-all-closed', () => {\n  // Respect the OSX convention of having the application in memory even\n  // after all windows have been closed\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp\n  .whenReady()\n  .then(() => {\n    registerScrowlFileProtocol();\n    Menu.init(isDARWIN);\n    Requester.init();\n    createWindow();\n\n    app.on('activate', () => {\n      // On macOS it's common to re-create a window in the app when the\n      // dock icon is clicked and there are no other windows open.\n      if (mainWindow === null) createWindow();\n    });\n  })\n  .catch(console.log);\n"],"names":["$2240a9306c32a1fd$export$c425ec604693c083","process","env","NODE_ENV","port","PORT","htmlFileName","url","$bzP7x$url","URL","pathname","href","$parcel$interopDefault","$bzP7x$path","join","$2240a9306c32a1fd$var$__dirname","$3d728155bbe7349b$var$EVENTS","$3d728155bbe7349b$export$6503ec6e8aabbaf","event","name","type","fn","console","error","push","$bzP7x$electron","ipcMain","handle","on","log","$3d728155bbe7349b$export$d4d7ea5e460e6f7a","events","key","$3d728155bbe7349b$export$2cd8252107eb640b","Promise","resolve","data","JSON","parse","stringify","$3d728155bbe7349b$export$2e2bcd8739ae039","$6fe5982c93f83ce4$export$89db4734f6c919c4","args","window","BrowserWindow","getAllWindows","undefined","webContents","send","$6fe5982c93f83ce4$export$2e2bcd8739ae039","$a11e71bef2df9f1e$var$pathing","source","$a11e71bef2df9f1e$var$__dirname","out","$a11e71bef2df9f1e$export$2a703dbb0cb35339","config","version","organization","language","startingPage","package","zip","outputFolder","dest","$bzP7x$fsextra","existsSync","mkdirSync","$a11e71bef2df9f1e$var$setPathing","$bzP7x$scormpackager","msg","$a11e71bef2df9f1e$export$fa3d5b535a2458a1","$a11e71bef2df9f1e$export$2cd8252107eb640b","$a11e71bef2df9f1e$export$2e2bcd8739ae039","$5b93420e72535392$export$a95942469f0fbfa1","$bzP7x$admzip","addLocalFolder","writeZip","filename","err","$5b93420e72535392$export$2e2bcd8739ae039","$e585e68d83441b0c$export$86d3e91ec655a54c","image","extensions","video","project","$e585e68d83441b0c$export$bf923d45a46235c4","filters","map","filter","$e585e68d83441b0c$export$a85fefe9f9398bfb","options","reject","dialog","showOpenDialog","then","canceled","filePaths","catch","$e585e68d83441b0c$export$99bd1e12f062b027","showSaveDialog","filePath","$e585e68d83441b0c$export$2e2bcd8739ae039","$2352f2112f641e43$var$normalize","normalize","$2352f2112f641e43$var$isJSON","test","$2352f2112f641e43$export$f7e2c8231c57a8bd","paths","apply","$2352f2112f641e43$export$feeb8eb948c4aae5","extname","$2352f2112f641e43$export$fb95504dd88e8153","exists","$2352f2112f641e43$export$a0f3b6799fdd398e","prefix","tmpDir","mkdtempSync","$bzP7x$os","tmpdir","$2352f2112f641e43$export$65c38f5b4a93b225","pathExistsSync","$2352f2112f641e43$export$d17fe30b9b9e39cb","media","contents","file","readFileSync","encoding","flag","$2352f2112f641e43$export$5130d5f6c93c72f7","message","outputFileSync","$2352f2112f641e43$export$83eb0cf7b57d2792","sourcePath","destPath","copySync","$2352f2112f641e43$export$9cc06fd6c62f44ff","destFile","basename","$2352f2112f641e43$export$2e2bcd8739ae039","$338882fee3e1e15c$var$DB","$bzP7x$knex","client","connection","$338882fee3e1e15c$var$__dirname","useNullAsDefault","$338882fee3e1e15c$export$3988ae62b71be9a3","tableName","column","select","from","$338882fee3e1e15c$export$adaa4cf7ef1b65be","update","$338882fee3e1e15c$export$2e2bcd8739ae039","$e8d5f45d375b161f$export$fa3d5b535a2458a1","itemList","items","$e8d5f45d375b161f$export$2cf566a19dc7c06c","itemToggle","item","appMenu","Menu","getApplicationMenu","menuItem","getMenuItemById","id","enabled","itemDisable","itemEnable","$e8d5f45d375b161f$export$2cd8252107eb640b","$ba0651ff3c94325d$var$separator","$ba0651ff3c94325d$export$fa3d5b535a2458a1","aboutOpen","preferencesOpen","$ba0651ff3c94325d$export$ce69bd05624d0c48","label","submenu","click","accelerator","role","$ba0651ff3c94325d$export$2cd8252107eb640b","$df2f0485796b61b7$export$fa3d5b535a2458a1","projectNew","projectSave","projectSaveAs","importFile","$df2f0485796b61b7$export$ce69bd05624d0c48","$df2f0485796b61b7$export$2cd8252107eb640b","$3da62ae0b4675706$export$c9a19c59161f09a0","isMacOs","EVENTS","template","Object","assign","$5d404ab3b21c6269$export$2cd8252107eb640b","menuConfig","menu","buildFromTemplate","setApplicationMenu","$5d404ab3b21c6269$export$2e2bcd8739ae039","$66ca4d0ee4ad0035$export$185802fd694ee1f5","tempDir","$68cd77d4c28b77bd$exports","dirTempSync","writeRes","fileWriteSync","workingFile","workingDir","split","slice","$66ca4d0ee4ad0035$export$a1544dad697b423d","isSaveAs","updateProject","res","archive","saveFile","saveDir","dialogSave","title","$66ca4d0ee4ad0035$export$4da7403fdb9cb456","fileTypes","length","getDialogMediaFilters","dialogOptions","dialogOpen","openRes","importSource","copyRes","fileTempSync","workingImport","workingImports","import","$66ca4d0ee4ad0035$export$fa3d5b535a2458a1","new","save","$66ca4d0ee4ad0035$export$2cd8252107eb640b","$61c16a1282787338$exports","registerAll","$66ca4d0ee4ad0035$export$b6032183171af19f","$66ca4d0ee4ad0035$export$2e2bcd8739ae039","$1534abd40cf62ab0$export$3988ae62b71be9a3","async","preference","$a33e2ebf7a487d29$exports","get","$1534abd40cf62ab0$export$adaa4cf7ef1b65be","set","$1534abd40cf62ab0$var$handlerGetPreference","preferenceName","$1534abd40cf62ab0$export$fa3d5b535a2458a1","list","$1534abd40cf62ab0$export$2cd8252107eb640b","$1534abd40cf62ab0$export$6b7b6cff4ccb438b","$1534abd40cf62ab0$export$2e2bcd8739ae039","$7e7bba8c516f69a7$var$models","$810e0031f47d3e9a$exports","$3da50ff2f317619e$exports","$7e7bba8c516f69a7$export$2cd8252107eb640b","forEach","model","init","$5a2cb2caae04678e$var$__rootdir","$5a2cb2caae04678e$var$__dirname","$5a2cb2caae04678e$var$mainWindow","$5a2cb2caae04678e$var$isDevelopment","DEBUG_PROD","$5a2cb2caae04678e$var$isDARWIN","platform","$5a2cb2caae04678e$var$createWindow","$bzP7x$electrondebug","installResult","all","$bzP7x$electrondevtoolsinstaller","REACT_DEVELOPER_TOOLS","RESOURCES_PATH","app","isPackaged","resourcesPath","getAssetPath","preloadPath","browserWindowConfig","titleBarStyle","show","width","minWidth","height","icon","webPreferences","preload","getBrowserWindow","$a3981526a2cac1f8$exports","loadURL","Error","START_MINIMIZED","minimize","openDevTools","mode","setWindowOpenHandler","edata","shell","openExternal","action","quit","whenReady","protocolName","protocol","registerFileProtocol","request","callback","replace","decodeURIComponent","$5a2cb2caae04678e$var$registerScrowlFileProtocol","$f0288898e675e0e0$exports"],"version":3,"file":"main.js.map"}