var e=require("electron"),r=require("path"),t=require("fs-extra"),n=(require("scorm-packager"),require("adm-zip")),o=require("os"),s=require("handlebars"),a=require("knex");function c(e){return e&&e.__esModule?e.default:e}function i(e,r,t,n){Object.defineProperty(e,r,{get:t,set:n,enumerable:!0,configurable:!0})}const l=(e,r)=>{try{const t=new(c(n));return t.addLocalFolder(e),t.writeZip(r),{error:!1,filePath:r}}catch(e){return{error:!0,message:e}}};const f={image:{name:"Image",extensions:["jpg","jpeg","png"]},video:{name:"Video",extensions:["mp4","mkv","avi"]},project:{name:"Scrowl Project",extensions:["scrowl"]}},u=r=>new Promise(((t,n)=>{e.dialog.showOpenDialog(r).then((({canceled:e,filePaths:r})=>{t({error:!1,canceled:e,filePaths:r})})).catch((e=>{n({filePaths:[],canceled:!1,error:!0,message:e})}))})),m=r=>new Promise(((t,n)=>{e.dialog.showSaveDialog(r).then((({canceled:e,filePath:r})=>{t({error:!1,canceled:e,filePath:r})})).catch((e=>{n({filePath:"",canceled:!1,error:!0,message:e})}))}));const p=e=>c(r).normalize(e),g=e=>/.json$/.test(e)||/.project$/.test(e),d=e=>{let n;try{return n=c(t).mkdtempSync(c(r).join(c(o).tmpdir(),""+(e?`${e}_`:""))),{error:!1,pathName:n}}catch(e){return{error:!0,message:e}}},h=(e,r)=>{const n=p(e);if(!r)return{error:!0,filename:n,message:"no contents to write"};try{return g(e)&&(r="string"!=typeof r?JSON.stringify(r,null,2):JSON.stringify(JSON.parse(r),null,2)),c(t).outputFileSync(n,r),{error:!1,filename:n}}catch(e){return{error:!0,filename:n,message:e}}},P=(e,r)=>{const n=p(e),o=p(r);try{return c(t).copySync(n,o),{error:!1,filename:o}}catch(e){return{error:!0,message:e}}},j=(e,t)=>{const n=`${t}/${c(r).basename(e)}`;return P(e,n)};c(s).registerHelper("raw",(e=>e.fn()));var v=r.resolve(__dirname,"../src/main/services/exporter");c(r).join(v,"course/templates/index.hbs"),c(r).join(v,"course/package/content/index.html"),c(r).join(v,"course/package"),c(r).join(v,"course/dist");const w={package:"package-course"};var y=r.resolve(__dirname,"../src/main/services/internal-storage");c(a)({client:"sqlite3",connection:{filename:c(r).join(y,"./scrowl.sqlite")},useNullAsDefault:!0});const S={getPreferencesList:"get-preferences-list",getPreference:"get-preference",setPreferences:"set-preferences"};const q=S;var k,x={};k=x,Object.defineProperty(k,"__esModule",{value:!0,configurable:!0}),i(x,"create",(()=>N)),i(x,"save",(()=>b)),i(x,"importFile",(()=>_)),i(x,"EVENTS",(()=>E)),i(x,"default",(()=>O));const N=function(e,r){const t=d("scrowl");if(t.error)return t;const n=`${t.pathName}/scrowl.project`;return h(n,r)},b=async function(e,r,t){const n={title:"Scrowl - Save Project",filters:[{name:"Scrowl Project",extensions:["scrowl"]}]};if(!t){const e=await m(n);if(e.error)return e;e.filePath&&(t=e.filePath)}return s=t,(o=r)?s?l(o,s):{error:!0,message:"project requires a filename"}:{error:!0,message:"project requires a source"};var o,s},_=async function(e,r,t){const n=(e=>e.map((e=>f[e])))(r);if(!n.length)return{error:!0,message:"valid file types need to be declared for importing"};const o={title:"Scrowl - Import File",filters:n},s=await u(o);return s.error?s:s.filePaths.length?j(s.filePaths[0],t):{error:!0,message:"no files found/selected"}},E=[{name:"project-create",fn:N},{name:"project-save",fn:b},{name:"project-import",fn:_}];var O={EVENTS:E,create:N,save:b};const $=[x],V=()=>{const e=e=>e.name;return $.map((r=>r.EVENTS?r.EVENTS.map(e):[])).flat()};const F=[w.package,q.getPreferencesList,q.getPreference,q.setPreferences].concat(V());e.contextBridge.exposeInMainWorld("electronAPI",{ipcRenderer:{invoke(r,...t){if(F.includes(r))return e.ipcRenderer.invoke(r,...t)}}});
//# sourceMappingURL=preload.js.map
