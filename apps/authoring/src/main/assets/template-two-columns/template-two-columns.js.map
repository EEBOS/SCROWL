{"mappings":";;;;AAAA;;ACAA,IAAA,yCAA6C;AAC7C,IAAA,yCAA4C;AAC5C,IAAA,yCAAuD;AACvD,IAAA,yCAAsD;AAHtD,yCAA6B,GAAG,aAAa,CAAC;AAC9C,yCAA4B,GAAG,aAAa,CAAC;AAC7C,yCAAkC,GAAG,kBAAkB,CAAC;AACxD,yCAAiC,GAAG,kBAAkB,CAAC;;;AEHvD;;AAOO,MAAM,yCAAK,GAAG,CAAC,EAPtB,SAOwB,OAAO,CAAA,EAAc,GAAK;IAChD,qBAAO,WAAC,IAAE;kBAAE,OAAO,EAAE,KAAK;MAAM,CAAA;CACjC;IAED,wCAEE,GAFa;WACb,yCAAK;CACN;;ADbD;AEAA;;AAOO,MAAM,yCAAQ,GAAG,CAAC,EAPzB,SAO2B,OAAO,CAAA,EAAiB,GAAK;IACtD,qBAAO,WAAC,IAAE;kBAAE,OAAO,CAAC,KAAK;MAAM,CAAC;CACjC,AAAC;IAEF,wCAEE,GAFa;cACb,yCAAQ;CACT;;;ACbD;;AAEO,MAAM,yCAAW,GAAG,IAAM;IAC/B,qBAAO,WAAC,IAAE,KAAG,CAAC;CACf,AAAC;IAEF,wCAEE,GAFa;iBACb,yCAAW;CACZ;;;ACRD;;AAOO,MAAM,yCAAM,GAAG,CAAC,EAPvB,SAOyB,OAAO,CAAA,EAAe,GAAK;IAClD,qBAAO,WAAC,UAAQ;QAAC,IAAI,EAAE,CAAC;QAAE,WAAW,EAAE,OAAO,CAAC,KAAK;MAAI,CAAC;CAC1D,AAAC;IAEF,wCAEE,GAFa;YACb,yCAAM;CACP;;;;;ANJM,MAAM,yCAAU,GAAG,CAAC,EAT3B,UAS6B,QAAQ,CAAA,EAAkB,GAAK;IAC1D,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,AAAC;IACnC,MAAM,cAAc,GAAG,QAAQ,CAAC,QAAQ,AAAC;IACzC,MAAM,eAAe,GAAG,QAAQ,CAAC,SAAS,AAAC;IAC3C,MAAM,eAAe,GAAG,QAAQ,CAAC,SAAS,AAAC;IAE3C,IAAI,WAAW,CAAC,IAAI,KAAK,MAAM,EAAE;QAC/B,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC3C,qBAAO,WAAC,eAAQ,KAAY,CAAC;KAC9B;IAED,IAAI,cAAc,CAAC,IAAI,KAAK,MAAM,EAAE;QAClC,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC9C,qBAAO,WAAC,eAAQ,KAAY,CAAC;KAC9B;IAED,IAAI,eAAe,CAAC,IAAI,KAAK,MAAM,EAAE;QACnC,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAChD,qBAAO,WAAC,eAAQ,KAAY,CAAC;KAC9B;IAED,IAAI,eAAe,CAAC,IAAI,KAAK,MAAM,EAAE;QACnC,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAChD,qBAAO,WAAC,eAAQ,KAAY,CAAC;KAC9B;IAED,qBACE,YAAC,KAAG;QAAC,SAAS,EAAE,yCAAiB;;0BAC/B,WAAC,yCAAK;gBAAC,OAAO,EAAE,WAAW;cAAI;0BAC/B,WAAC,yCAAW,KAAG;0BACf,WAAC,yCAAQ;gBAAC,OAAO,EAAE,cAAc;cAAI;0BACrC,YAAC,KAAG;gBAAC,SAAS,EAAE,yCAAsB;;kCACpC,WAAC,yCAAM;wBAAC,OAAO,EAAE,eAAe;sBAAI;kCACpC,WAAC,yCAAM;wBAAC,OAAO,EAAE,eAAe;sBAAI;;cAChC;;MACF,CACN;CACH,AAAC;IAEF,wCAEE,GAFa;gBACb,yCAAU;CACX","sources":["src/index.tsx","src/styles.module.scss","src/components/index.ts","src/components/title.tsx","src/components/subtitle.tsx","src/components/line-divider.tsx","src/components/column.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport * as styles from \"./styles.module.scss\";\nimport { ManifestElements } from \"../dev/src/slide.types\";\nimport { Title, Subtitle, LineDivider, Column } from \"./components\";\n\nexport interface TwoColumnProps {\n  manifest: ManifestElements;\n}\n\nexport const TwoColumns = ({ manifest }: TwoColumnProps) => {\n  const titleConfig = manifest.title;\n  const subtitleConfig = manifest.subtitle;\n  const columnOneConfig = manifest.columnOne;\n  const columnTwoConfig = manifest.columnTwo;\n\n  if (titleConfig.type !== \"text\") {\n    console.error(\"Title value not a string!\");\n    return <Fragment></Fragment>;\n  }\n\n  if (subtitleConfig.type !== \"text\") {\n    console.error(\"Subtitle value not a string!\");\n    return <Fragment></Fragment>;\n  }\n\n  if (columnOneConfig.type !== \"text\") {\n    console.error(\"Column one value not a string!\");\n    return <Fragment></Fragment>;\n  }\n\n  if (columnTwoConfig.type !== \"text\") {\n    console.error(\"Column two value not a string!\");\n    return <Fragment></Fragment>;\n  }\n\n  return (\n    <div className={styles.twoColumns}>\n      <Title options={titleConfig} />\n      <LineDivider />\n      <Subtitle options={subtitleConfig} />\n      <div className={styles.columnContainer}>\n        <Column options={columnOneConfig} />\n        <Column options={columnTwoConfig} />\n      </div>\n    </div>\n  );\n};\n\nexport default {\n  TwoColumns,\n};\n",".two-columns {\n  margin: 0px;\n  padding: 0px;\n  background-color: white;\n  margin: 3em;\n  padding: 2em;\n  border: 1px solid black;\n\n  .column-container {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  h2,\n  h3,\n  h6,\n  p,\n  textarea {\n    font-family: sans-serif;\n  }\n\n  h2 {\n    font-size: 4em;\n  }\n\n  h3 {\n    font-size: 3em;\n  }\n\n  h6 {\n    font-size: 2em;\n    margin-top: 0;\n  }\n\n  p,\n  textarea {\n    font-size: 2em;\n  }\n\n  textarea {\n    width: 45%;\n    padding: 0.5em;\n  }\n\n  hr {\n    border: none;\n    height: 0.2em;\n    background-color: black;\n  }\n}\n","export * from './title';\nexport * from './subtitle';\nexport * from './line-divider';\nexport * from './column';","import React from \"react\";\nimport { ManifestElementText } from \"../../dev/src/slide.types\";\n\nexport type TitleProps = {\n  options: ManifestElementText\n}\n\nexport const Title = ({ options }: TitleProps) => {\n  return <h2>{options?.value}</h2>\n}\n\nexport default {\n  Title,\n};","import React from \"react\";\nimport { ManifestElementText } from \"../../dev/src/slide.types\";\n\nexport interface SubtitleProps {\n  options: ManifestElementText;\n}\n\nexport const Subtitle = ({ options }: SubtitleProps) => {\n  return <h3>{options.value}</h3>;\n};\n\nexport default {\n  Subtitle,\n};","import React from \"react\";\n\nexport const LineDivider = () => {\n  return <hr />;\n};\n\nexport default {\n  LineDivider,\n};","import React from \"react\";\nimport { ManifestElementText } from \"../../dev/src/slide.types\";\n\nexport interface ColumnProps {\n  options: ManifestElementText;\n}\n\nexport const Column = ({ options }: ColumnProps) => {\n  return <textarea rows={4} placeholder={options.value} />;\n};\n\nexport default {\n  Column,\n};"],"names":[],"version":3,"file":"template-two-columns.js.map"}