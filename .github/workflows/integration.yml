name: Integration workflow

on: 
  push: 
    branches: [ main, develop ]
  pull_request:
  workflow_dispatch: # so we can run this workflow manually as well

jobs: 
  test-react:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Setup Node
          uses: actions/setup-node@v1
          with:
            node-version: 16.9 # matching Elctron's version of node 
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - uses: actions/cache@v1
          id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: Install react dependancies
          run: yarn
        - name: test
          run: yarn test
  test-node:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Setup Node
          uses: actions/setup-node@v1
          with:
            node-version: 16.9 # matching Elctron's version of node 
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - uses: actions/cache@v1
          id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: Install react dependancies
          run: yarn
        - name: test
          run: yarn test